name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

###############################################################################
# 1 ── Unit-test job (what you already had)                                   #
###############################################################################
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---------- Poetry cache ----------
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      # ---------- Python + Poetry ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          pip install --quiet poetry
          poetry config virtualenvs.create false

      - name: Install deps & the package
        run: poetry install --no-interaction

      # ---------- Run unit tests ----------
      - name: Run pytest
        run: poetry run pytest -q          # ← remove the “|| true” so failures fail

###############################################################################
# 2 ── End-user install smoke-test (depends on tests passing)                 #
###############################################################################
  install-check:
    needs: test            # don’t run if the test job failed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---------- Build wheel ----------
      - name: Build wheel with Poetry
        run: |
          python -m pip install --quiet poetry
          poetry build -q

      # ---------- Install pipx ----------
      - name: Install pipx
        run: |
          python -m pip install --quiet --user pipx
          python -m pipx ensurepath
          echo "$HOME/.local/bin" >> $GITHUB_PATH   # add pipx shims to PATH

      # ---------- pipx-install the wheel we just built ----------
      - name: pipx install oneclick-context wheel
        run: |
          pipx install --force dist/*.whl

      # ---------- Smoke test ----------
      - name: Run oneclick (smoke)
        run: |
          oneclick . --depth 1 --fmt json | head -n 5
